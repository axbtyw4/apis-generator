<?php

namespace App\Http\Controllers;


class BaseController extends Controller
{

    public $notFoundMessage = 'cant find this element please make sure you chose right element';

    /**
     * @param $data
     * @param string $message
     * @param null $error
     * @param int $status
     * @return \Illuminate\Contracts\Routing\ResponseFactory|\Illuminate\Http\Response
     * @throws \Exception
     */
    public function getResponse($data, $message = "success response", $error = null, $status = 200)
    {
        try {
            if (gettype($error) == 'integer') $status = $error;
            $arr = [
                'data' => $data,
                'message' => $message,
                'error' => in_array($status, $this->getSuccessState()) ? false : true,
                'status' => $status,
            ];

            return response($arr, $status);
        } catch (\Exception $exception) {
            throw new \Exception($exception->getMessage());
        }
    }


    /**
     * @return array
     */
    public function getSuccessState()
    {
        return [200, 201, 202];
    }

    /**
     * @param $model
     * @param $id
     * @param $resources
     * @return \Illuminate\Contracts\Routing\ResponseFactory|\Illuminate\Http\Response
     * @throws \Exception
     */
    public function showCustomElement($model, $id, $resources)
    {
        try {
            $model_check = $model::find($id);
            if (!isset($model_check)) {
                return $this->getResponse('no data', $this->notFoundMessage, 404);
            }
            return $this->getResponse(new $resources($model_check));
        } catch (\Exception $exception) {
            throw new \Exception($exception->getMessage());
        }
    }

    /**
     * @param $model
     * @param $id
     * @param $request
     * @return \Illuminate\Contracts\Routing\ResponseFactory|\Illuminate\Http\Response
     * @throws \Exception
     */
    public function updateCustomElement($model, $id, $request)
    {
        try {
            $inputs = $request->all();
            $model_check = $model::find($id);
            if (!isset($model_check)) {
                return $this->getResponse('no data', $this->notFoundMessage, 404);
            }
            $model_check->update($inputs);
            return $this->getResponse('no data', "edit success", 200);
        } catch (\Exception $exception) {
            throw new \Exception($exception->getMessage());
        }
    }

    /**
     * @param $model
     * @param $id
     * @return \Illuminate\Contracts\Routing\ResponseFactory|\Illuminate\Http\Response
     * @throws \Exception
     */
    public function deleteCustomElement($model, $id)
    {
        try {
            $model_check = $model::find($id);
            if (!isset($model_check)) {
                return $this->getResponse('no data', $this->notFoundMessage, 404);
            }
            $model_check->delete();
            return $this->getResponse('no data', "delete success", 200);
        } catch (\Exception $exception) {
            throw new \Exception($exception->getMessage());
        }
    }


    /**
     * @param $file
     * @param $nameInRequest
     * @param $path
     * @return string
     * @throws \Exception
     */
    public function SaveFile($file, $nameInRequest, $path)
    {
        try {
            if (request()->hasFile($nameInRequest)) {
                $fileName = time() . '.' . $file->getClientOriginalExtension();
                $file->move($path, $fileName);
                return $fileName;
            }
        } catch (\Exception $exception) {
            throw new \Exception($exception->getMessage());
        }
    }
}
